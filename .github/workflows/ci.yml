name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  CARGO_TERM_COLOR: always

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Setup Rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        override: true
        components: rustfmt, clippy

    - name: Setup Go
      uses: actions/setup-go@v3
      with:
        go-version: '1.21'

    - name: Setup Protobuf
      run: |
        sudo apt-get update
        sudo apt-get install -y protobuf-compiler

    - name: Install Go protobuf tools
      run: |
        go install google.golang.org/protobuf/cmd/protoc-gen-go@latest
        go install google.golang.org/grpc/cmd/protoc-gen-go-grpc@latest

    - name: Generate protobuf code
      run: ./scripts/codegen.sh

    - name: Build
      run: make build

    - name: Run tests
      run: make test

    - name: Check formatting
      run: make fmt-check

    - name: Clippy check
      run: make clippy

  docker:
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'

    steps:
    - uses: actions/checkout@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Build and push broker image
      uses: docker/build-push-action@v4
      with:
        context: .
        file: docker/broker.Dockerfile
        push: true
        tags: |
          nfa/broker:latest
          nfa/broker:${{ github.sha }}

    - name: Build and push runtime image
      uses: docker/build-push-action@v4
      with:
        context: .
        file: docker/runtime.Dockerfile
        push: true
        tags: |
          nfa/runtime:latest
          nfa/runtime:${{ github.sha }}